[{"/Users/suchanpark/Downloads/today-i-learned/src/index.js":"1","/Users/suchanpark/Downloads/today-i-learned/src/App.js":"2","/Users/suchanpark/Downloads/today-i-learned/src/supabase.js":"3"},{"size":233,"mtime":1696379279193,"results":"4","hashOfConfig":"5"},{"size":7716,"mtime":1696989791301,"results":"6","hashOfConfig":"5"},{"size":432,"mtime":1696580511436,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"18i0orz",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"/Users/suchanpark/Downloads/today-i-learned/src/index.js",[],[],["19"],"/Users/suchanpark/Downloads/today-i-learned/src/App.js",["20","21","22","23","24"],[],"import { useEffect, useState } from 'react';\nimport supabase from './supabase';\nimport './style.css';\n\nconst CATEGORIES = [\n  { name: \"technology\", color: \"#3b82f6\" },\n  { name: \"science\", color: \"#16a34a\" },\n  { name: \"finance\", color: \"#ef4444\" },\n  { name: \"society\", color: \"#eab308\" },\n  { name: \"entertainment\", color: \"#db2777\" },\n  { name: \"health\", color: \"#14b8a6\" },\n  { name: \"history\", color: \"#f97316\" },\n  { name: \"news\", color: \"#8b5cf6\" },\n];\n\nconst initialFacts = [\n  {\n    id: 1,\n    text: \"React is being developed by Meta (formerly facebook)\",\n    source: \"https://opensource.fb.com/\",\n    category: \"technology\",\n    votesInteresting: 24,\n    votesMindblowing: 9,\n    votesFalse: 4,\n    createdIn: 2021,\n  },\n  {\n    id: 2,\n    text: \"Millennial dads spend 3 times as much time with their kids than their fathers spent with them. In 1982, 43% of fathers had never changed a diaper. Today, that number is down to 3%\",\n    source:\n      \"https://www.mother.ly/parenting/millennial-dads-spend-more-time-with-their-kids\",\n    category: \"society\",\n    votesInteresting: 11,\n    votesMindblowing: 2,\n    votesFalse: 0,\n    createdIn: 2019,\n  },\n  {\n    id: 3,\n    text: \"Lisbon is the capital of Portugal\",\n    source: \"https://en.wikipedia.org/wiki/Lisbon\",\n    category: \"society\",\n    votesInteresting: 8,\n    votesMindblowing: 3,\n    votesFalse: 1,\n    createdIn: 2015,\n  },\n];\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return <div>\n    <span style={{fontSize: '40px'}}>{count}</span>\n    <button className='btn btn-large' onClick={()=> setCount((c) => c+1)}>+1</button>\n  </div>\n}\n\nfunction App() {\n  const [showForm, setShowForm] = useState(false);\n  const [facts, setFacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentCategory, setCurrentCategory] = useState(\"all\");\n  useEffect(function() {\n    async function getFacts()  {\n      setIsLoading(true);\n\n      let query = supabase.from('facts').select('*');\n\n      if(currentCategory !== \"all\")\n       query = query.eq('category', currentCategory);\n\n      const { data: facts, error } = await query.order('votesInteresting', {ascending: false}).limit(1000);\n\n\n    if(!error) setFacts(facts);\n    else alert(\"There was a problem getting data\");\n    setIsLoading(false);\n\n    }\n    getFacts();\n  }, [currentCategory]);\n\n\n  return (\n  <>\n\n  <Header showForm={showForm} setShowForm={setShowForm} />\n  {showForm ? <NewFactForm setFacts={setFacts} /> : null}\n  <main className='main'>\n  <CategoryFilter setCurrentCategory={setCurrentCategory} />\n  {isLoading ? <Loader /> : <FactList facts={facts} setFacts={setFacts} />}\n  \n  </main>\n  </>\n  \n);\n}\n\nfunction Loader() {\n  return <p className='message'>Loading...</p>\n}\n\nfunction Header({showForm, setShowForm}) {\n  const appTitle = \"Today I learned\";\n\n  return <header className=\"header\">\n  <div className=\"logo\">\n    <img src=\"logo.png\"\n      height=\"68\"\n      width=\"68\"\n      alt=\"Today I Learned Logo\"\n    />\n    <h1>{appTitle}</h1>\n  </div>\n\n  <button className=\"btn btn-large btn-open\" onClick={()=>setShowForm((show)=> !show)}>{showForm ? \"Close\" : \"Share a fact\"}</button>\n  </header>\n}\n\nfunction isValidHttpUrl(string) {\n  let url;\n  try{\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol ==\"http:\" || url.protocol === \"https:\";\n}\n\n\nfunction NewFactForm({setFacts, setShowForm}){\n  const [text, setText] = useState('');\n  const [source, setSource] = useState('');\n  const [category, setCategory] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const textLength = text.length;\n\n  async function handleSubmit(e){\n    // 1. Prevent broswer reload\n    e.preventDefault();\n    console.log(text, source, category);\n\n    // 2. Check if data is valid, if so, create a new fact\n    if(text && isValidHttpUrl(source) && category && textLength<= 200) {\n\n    // 3. Create a new fact object\n    // const newFact = {id: Math.round(Math.random() * 10000),\n    //   text,\n    //   source,\n    //   category,\n    //   votesInteresting: 0,\n    //   votesMindblowing: 0,\n    //   votesFalse: 0,\n    //   createdIn: new Date().getFullYear(),};\n\n    // 3. Upload fact to Supabase and receive the new fact object\n    setIsUploading(true);\n     const {data: newFact, error} = await supabase.from('facts').insert({text, source, category}).select();\n      \n     setIsUploading(false);\n    // 4. Add the new fact to the UI: add the fact to state\n     if(!error) setFacts((facts)=> [newFact[0], ...facts]);\n      \n    // 5. REset input fields \n      setText('');\n      setSource('');\n      setCategory('');\n    // 6. Close the form \n      setShowForm(false);\n      \n\n    }\n  }\n\n  return <form className='fact-form' onSubmit={handleSubmit}><input type=\"text\" placeholder=\"Share a fact with the world...\" value={text} onChange={(e) => setText(e.target.value)}/>\n  <span>{200 - textLength}</span>\n  <input type=\"text\" placeholder=\"Trustworthy source...\" onChange={(e)=>setSource(e.target.value)} disabled={isUploading} />\n  <select value={category} onChange={(e)=>setCategory(e.target.value)} disabled={isUploading}>\n    <option value=\"\">Choose category:</option>\n    {CATEGORIES.map((cat)=>(<option key={cat.name} value={cat.name}>{cat.name.toUpperCase()}</option>))}\n  </select>\n  <button className=\"btn btn-large\" disabled={isUploading}>Post</button></form>\n}\n\nfunction CategoryFilter({setCurrentCategory}) {\n  return <aside><ul>\n    <li className=\"category\">\n              <button className=\"btn btn-all-categories\" onClick={()=>setCurrentCategory(\"all\")}>All</button>\n            </li>\n    {CATEGORIES.map((cat)=><li key={cat.name} className=\"category\">\n              <button\n                className=\"btn btn-category\"\n                style={{backgroundColor: cat.color}}\n                onClick={()=>setCurrentCategory(cat.name)}\n              >\n                {cat.name}\n              </button>\n            </li>)}\n    \n    </ul></aside>;\n}\n\nfunction FactList({facts, setFacts}){\n\n  if(facts.length === 0)\n    return (<p className='message'>No facts for this category yet! Create the first one!</p>\n  );\n  \n\n  return (\n  <section><ul className='facts-list'>{\n    facts.map((fact)=>(\n    <Fact key={fact.id} fact={fact} setFacts={setFacts} />))}\n  </ul>\n  <p>There are {facts.length} facts in the database. Add your own! </p>\n  </section>\n  );\n}\n\n\n\nfunction Fact({fact, setFacts}) {\n  const [isUpdating, setIsUpdating] = useState(false);\n  const isDisputed = fact.votesInteresting + fact.votesMindblowing < fact.votesFalse;\n\n  async function handleVote(columnName){\n    setIsUpdating(true);\n    const { data: updatedFact, error} = await supabase.from('facts').update({[columnName]: fact [columnName] + 1 }).eq('id', fact.id).select();\n    setIsUpdating(false);\n\n    if(!error) setFacts((facts)=>facts.map((f) => (f.id === fact.id ? updatedFact[0] : f)));\n\n  }\n\n  return       <li className=\"fact\">\n  <p>\n    {isDisputed ? <span className='disputed'>[DISPUTEDü•π]</span> : null}\n    {fact.text}\n    <a className=\"source\"\n      href={fact.source}\n      target=\"_blank\"\n      >(Source)\n      </a>\n  </p>\n  <span className=\"tag\" style={{\n        backgroundColor: \n        CATEGORIES.find((cat) => cat.name === fact.category)?.color}}\n    >{fact.category}\n    </span>\n  <div className=\"vote-buttons\">\n    <button onClick={() => handleVote(\"votesInteresting\")} disabled={isUpdating}>üëç {fact.votesInteresting}</button>\n    <button onClick={() => handleVote(\"votesMindblowing\")} disabled={isUpdating}>ü§Ø {fact.votesMindblowing}</button>\n    <button onClick={() => handleVote(\"votesFalse\")} disabled={isUpdating}>‚õîÔ∏è {fact.votesFalse}</button>\n  </div>\n</li>\n  \n}\n\nexport default App;","/Users/suchanpark/Downloads/today-i-learned/src/supabase.js",[],[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":16,"column":7,"nodeType":"29","messageId":"30","endLine":16,"endColumn":19},{"ruleId":"27","severity":1,"message":"31","line":50,"column":10,"nodeType":"29","messageId":"30","endLine":50,"endColumn":17},{"ruleId":"32","severity":1,"message":"33","line":128,"column":23,"nodeType":"34","messageId":"35","endLine":128,"endColumn":25},{"ruleId":"36","severity":1,"message":"37","line":229,"column":92,"nodeType":"38","messageId":"39","endLine":229,"endColumn":109,"fix":"40"},{"ruleId":"41","severity":1,"message":"42","line":240,"column":5,"nodeType":"43","messageId":"44","endLine":243,"endColumn":8,"fix":"45"},"no-new-object",["46"],"no-unused-vars","'initialFacts' is assigned a value but never used.","Identifier","unusedVar","'Counter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-whitespace-before-property","Unexpected whitespace before property columnName.","MemberExpression","unexpectedWhitespace",{"range":"47","text":"48"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"49","text":"50"},"no-object-constructor",[6718,6719],"",[7097,7097]," rel=\"noreferrer\""]